openapi: 3.0.0
info:
  title: E-Commerce Demo API
  description: API for managing e-commerce demo operations
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /products:
    post:
      summary: Create a new product
      operationId: createProduct
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: Get all products
      operationId: getAllProducts
      tags:
        - Products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /products/{name}:
    get:
      summary: Get product by name
      operationId: getProductByName
      tags:
        - Products
      parameters:
        - name: name
          in: path
          description: Name of the product to search for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /products/{id}:
    get:
      summary: Get product by ID
      operationId: getProductById
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Unique identifier of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      summary: Update a product
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Unique identifier of the product to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      summary: Delete a product
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Unique identifier of the product to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product successfully deleted
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: bigdecimal
          description: Price of the product
        stock:
          type: integer
          description: Available stock for the product
      required:
        - id
        - name
        - price
        - description
        - stock